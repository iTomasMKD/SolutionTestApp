// <auto-generated />
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(PublishingCompanyDbContext))]
    [Migration("20230517165840_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Data.Magazine", b =>
                {
                    b.Property<int>("MagazineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MagazineId"));

                    b.Property<string>("MagazineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MagazineId");

                    b.ToTable("Magazines");
                });

            modelBuilder.Entity("Data.MagazineDistribution", b =>
                {
                    b.Property<int>("MagazineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MagazineId"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MagazineId1")
                        .HasColumnType("int");

                    b.Property<int>("PrintDistributionCompanyCompanyId")
                        .HasColumnType("int");

                    b.HasKey("MagazineId");

                    b.HasIndex("MagazineId1");

                    b.HasIndex("PrintDistributionCompanyCompanyId");

                    b.ToTable("MagazineDistributions");
                });

            modelBuilder.Entity("Data.PrintDistributionCompany", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("PrintDistributionCompanies");
                });

            modelBuilder.Entity("Data.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MagazineId")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("MagazineId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("Data.MagazineDistribution", b =>
                {
                    b.HasOne("Data.Magazine", "Magazine")
                        .WithMany("MagazineDistributions")
                        .HasForeignKey("MagazineId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.PrintDistributionCompany", "PrintDistributionCompany")
                        .WithMany("MagazineDistributions")
                        .HasForeignKey("PrintDistributionCompanyCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Magazine");

                    b.Navigation("PrintDistributionCompany");
                });

            modelBuilder.Entity("Data.Subscription", b =>
                {
                    b.HasOne("Data.Customer", "Customer")
                        .WithMany("Subscriptions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Magazine", "Magazine")
                        .WithMany("Subscriptions")
                        .HasForeignKey("MagazineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Magazine");
                });

            modelBuilder.Entity("Data.Customer", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Data.Magazine", b =>
                {
                    b.Navigation("MagazineDistributions");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("Data.PrintDistributionCompany", b =>
                {
                    b.Navigation("MagazineDistributions");
                });
#pragma warning restore 612, 618
        }
    }
}
